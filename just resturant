

// oldrestuantdetail page 

import React, { useState, useRef } from 'react';
import { ChevronLeft, Phone, Mail, Star, Clock, Wifi, Car, Users, Calendar, MessageCircle, Navigation, Bed, Shield, Award, MapPin, ChevronRight } from 'lucide-react';
import { BookingForm } from '../components';
import ReviewForm from '../components/ReviewForm';

const RestaurantDetailPage = ({ restaurant, onBack }) => {
  const [showBookingForm, setShowBookingForm] = useState(false);
  const [showReviewForm, setShowReviewForm] = useState(false);
  const scrollRef = useRef(null);

  const reviews = [
    {
      id: 1,
      name: "Sarah Johnson",
      rating: 5,
      comment: "Amazing authentic Balti food! The mountain views are breathtaking. Staff was very friendly and helpful.",
      date: "2 weeks ago",
      avatar: "https://images.unsplash.com/photo-1494790108755-2616b612b5e5?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 2,
      name: "Ahmad Ali",
      rating: 4,
      comment: "Great local experience. Food was delicious and prices are reasonable. Recommended for families.",
      date: "1 month ago",
      avatar: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 3,
      name: "Maria Garcia",
      rating: 5,
      comment: "Best restaurant in Skardu! The traditional dishes are exceptional. Will definitely come back.",
      date: "1 month ago",
      avatar: "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 4,
      name: "John Smith",
      rating: 4,
      comment: "Fantastic ambiance and delicious food. The service was top-notch, highly recommended!",
      date: "3 weeks ago",
      avatar: "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 5,
      name: "Ayesha Khan",
      rating: 5,
      comment: "A hidden gem in Skardu! The traditional Balti dishes were a delight.",
      date: "2 months ago",
      avatar: "https://images.unsplash.com/photo-1487412721497-9f7a77b7e8e8?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 6,
      name: "Emma Brown",
      rating: 4,
      comment: "Loved the outdoor seating and the food was amazing. Will visit again!",
      date: "1 month ago",
      avatar: "https://images.unsplash.com/photo-1517841905240-472988babdf9?w=50&h=50&fit=crop&crop=face"
    }
  ];

  // Function to scroll left
  const scrollLeft = () => {
    if (scrollRef.current) {
      scrollRef.current.scrollBy({ left: -300, behavior: 'smooth' });
    }
  };

  // Function to scroll right
  const scrollRight = () => {
    if (scrollRef.current) {
      scrollRef.current.scrollBy({ left: 300, behavior: 'smooth' });
    }
  };

  return (
    <div>
      <section className="py-3">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="relative mb-8 rounded-2xl overflow-hidden shadow-xl">
            <img 
              src={restaurant.images[0]} 
              alt={restaurant.name}
              className="w-full h-96 object-cover"
            />
            <div className="absolute bottom-6 left-6 text-white">
              <h1 className="text-4xl font-bold mb-2">{restaurant.name}</h1>
              <div className="flex items-center gap-4">
                <div className="flex items-center gap-1 bg-white/20 backdrop-blur-sm px-3 py-1 rounded-full">
                  <Star className="w-4 h-4 text-yellow-400 fill-current" />
                  <span className="font-semibold">{restaurant.rating}</span>
                  <span className="text-sm">({restaurant.reviewCount} reviews)</span>
                </div>
                <span className="bg-emerald-500/80 text-white px-3 py-1 rounded-full text-sm font-semibold backdrop-blur-sm">
                  {restaurant.type}
                </span>
              </div>
            </div>
          </div>
          {/* backbutton */}
          <div className="bg-white/90 backdrop-blur-sm border-b px-4 py-4">
            <div className="max-w-7xl mx-auto">
              <button
                onClick={onBack}
                className="flex items-center gap-2 text-emerald-600 hover:text-emerald-700 font-semibold group"
              >
                <ChevronLeft className="w-5 h-5 group-hover:-translate-x-1 transition-transform" />
                Back to Restaurants
              </button>
            </div>
          </div>
          {/* backbutton */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <div className="lg:col-span-2 space-y-8">
              <div className="bg-white rounded-2xl shadow-lg p-8">
                <h2 className="text-2xl font-bold text-slate-900 mb-4">About This Restaurant</h2>
                <p className="text-slate-700 leading-relaxed mb-6">{restaurant.description}</p>
                
                <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                  <div>
                    <h3 className="text-lg font-semibold text-slate-900 mb-4">Contact & Hours</h3>
                    <div className="space-y-3">
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-emerald-100 rounded-full flex items-center justify-center">
                          <Phone className="w-4 h-4 text-emerald-600" />
                        </div>
                        <span className="text-slate-700">{restaurant.contact.phone}</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-emerald-100 rounded-full flex items-center justify-center">
                          <Mail className="w-4 h-4 text-emerald-600" />
                        </div>
                        <span className="text-slate-700">{restaurant.contact.email}</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-emerald-100 rounded-full flex items-center justify-center">
                          <MapPin className="w-4 h-4 text-emerald-600" />
                        </div>
                        <span className="text-slate-700">{restaurant.location}</span>
                      </div>
                      <div className="flex items-center gap-3">
                        <div className="w-8 h-8 bg-emerald-100 rounded-full flex items-center justify-center">
                          <Clock className="w-4 h-4 text-emerald-600" />
                        </div>
                        <span className="text-slate-700">{restaurant.openHours}</span>
                      </div>
                    </div>
                  </div>

                  <div>
                    <h3 className="text-lg font-semibold text-slate-900 mb-4">Amenities</h3>
                    <div className="grid grid-cols-2 gap-3">
                      {restaurant.amenities.map((amenity, index) => (
                        <div key={index} className="bg-slate-50 rounded-lg p-3 flex items-center gap-2">
                          {amenity === 'WiFi' && <Wifi className="w-4 h-4 text-blue-500" />}
                          {amenity === 'Parking' && <Car className="w-4 h-4 text-green-500" />}
                          {amenity === 'AC' && <div className="w-4 h-4 bg-cyan-500 rounded-full" />}
                          {!['WiFi', 'Parking', 'AC'].includes(amenity) && <div className="w-4 h-4 bg-orange-500 rounded-full" />}
                          <span className="text-slate-700 text-sm font-medium">{amenity}</span>
                        </div>
                      ))}
                    </div>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-2xl shadow-lg p-8">
                <h3 className="text-xl font-bold text-slate-900 mb-6">Restaurant Statistics</h3>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  <div className="bg-gradient-to-br from-emerald-50 to-teal-50 p-4 rounded-xl text-center border border-emerald-100">
                    <div className="w-8 h-8 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-2">
                      <Star className="w-4 h-4 text-emerald-600" />
                    </div>
                    <div className="text-2xl font-bold text-emerald-600">{restaurant.rating}</div>
                    <div className="text-sm text-slate-600">Rating</div>
                  </div>
                  <div className="bg-gradient-to-br from-blue-50 to-indigo-50 p-4 rounded-xl text-center border border-blue-100">
                    <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-2">
                      <Users className="w-4 h-4 text-blue-600" />
                    </div>
                    <div className="text-2xl font-bold text-blue-600">{restaurant.reviewCount}</div>
                    <div className="text-sm text-slate-600">Reviews</div>
                  </div>
                  <div className="bg-gradient-to-br from-purple-50 to-pink-50 p-4 rounded-xl text-center border border-purple-100">
                    <div className="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-2">
                      <Award className="w-4 h-4 text-purple-600" />
                    </div>
                    <div className="text-2xl font-bold text-purple-600">{restaurant.established}</div>
                    <div className="text-sm text-slate-600">Established</div>
                  </div>
                  <div className="bg-gradient-to-br from-orange-50 to-amber-50 p-4 rounded-xl text-center border border-orange-100">
                    <div className="w-8 h-8 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-2">
                      <Shield className="w-4 h-4 text-orange-600" />
                    </div>
                    <div className="text-2xl font-bold text-orange-600">{restaurant.status}</div>
                    <div className="text-sm text-slate-600">Status</div>
                  </div>
                </div>
              </div>

              <div className="bg-white rounded-2xl shadow-lg p-8">
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-xl font-bold text-slate-900">Customer Reviews</h3>
                  <button
                    onClick={() => setShowReviewForm(!showReviewForm)}
                    className="bg-emerald-600 text-white px-6 py-2 rounded-xl hover:bg-emerald-700 hover:scale-105 transition-all font-semibold"
                  >
                    Write Review
                  </button>
                </div>

                {showReviewForm && <ReviewForm onClose={() => setShowReviewForm(false)} />}

                <div className="relative">
                  <div 
                    ref={scrollRef}
                    className="flex overflow-x-auto space-x-4 pb-4 hide-scrollbar"
                    style={{ scrollSnapType: 'x mandatory' }}
                  >
                    {reviews.slice(0, 3).map((review) => (
                      <div
                        key={review.id}
                        className="flex-none w-80 bg-gradient-to-br from-slate-50 to-gray-100 rounded-xl p-6 shadow-md hover:shadow-xl transition-all duration-300"
                        style={{ scrollSnapAlign: 'start' }}
                      >
                        <div className="flex items-start gap-4">
                          <img
                            src={review.avatar}
                            alt={review.name}
                            className="w-12 h-12 rounded-full object-cover ring-2 ring-emerald-200"
                          />
                          <div className="flex-1">
                            <div className="flex items-center gap-2 mb-2">
                              <h5 className="font-semibold text-slate-900">{review.name}</h5>
                              <div className="flex">
                                {[...Array(5)].map((_, i) => (
                                  <Star
                                    key={i}
                                    className={`w-4 h-4 ${i < review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}`}
                                  />
                                ))}
                              </div>
                            </div>
                            <p className="text-slate-600 text-sm leading-relaxed line-clamp-3">{review.comment}</p>
                            <span className="text-xs text-slate-500 mt-2 block">{review.date}</span>
                          </div>
                        </div>
                      </div>
                    ))}
                    {reviews.length > 3 && reviews.slice(3).map((review) => (
                      <div
                        key={review.id}
                        className="flex-none w-80 bg-gradient-to-br from-slate-50 to-gray-100 rounded-xl p-6 shadow-md hover:shadow-xl transition-all duration-300"
                        style={{ scrollSnapAlign: 'start' }}
                      >
                        <div className="flex items-start gap-4">
                          <img
                            src={review.avatar}
                            alt={review.name}
                            className="w-12 h-12 rounded-full object-cover ring-2 ring-emerald-200"
                          />
                          <div className="flex-1">
                            <div className="flex items-center gap-2 mb-2">
                              <h5 className="font-semibold text-slate-900">{review.name}</h5>
                              <div className="flex">
                                {[...Array(5)].map((_, i) => (
                                  <Star
                                    key={i}
                                    className={`w-4 h-4 ${i < review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}`}
                                  />
                                ))}
                              </div>
                            </div>
                            <p className="text-slate-600 text-sm leading-relaxed line-clamp-3">{review.comment}</p>
                            <span className="text-xs text-slate-500 mt-2 block">{review.date}</span>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                  {reviews.length > 3 && (
                    <>
                      <button
                        onClick={scrollLeft}
                        className="absolute left-0 top-1/2 -translate-y-1/2 bg-emerald-600 text-white p-2 rounded-full shadow-lg hover:bg-emerald-700 transition-all duration-200"
                      >
                        <ChevronLeft className="w-5 h-5" />
                      </button>
                      <button
                        onClick={scrollRight}
                        className="absolute right-0 top-1/2 -translate-y-1/2 bg-emerald-600 text-white p-2 rounded-full shadow-lg hover:bg-emerald-700 transition-all duration-200"
                      >
                        <ChevronRight className="w-5 h-5" />
                      </button>
                    </>
                  )}
                </div>
              </div>
            </div>

            <div className="space-y-6">
              <div className="bg-white rounded-2xl shadow-lg p-6">
                <h3 className="text-xl font-bold text-slate-900 mb-6">Quick Actions</h3>
                <div className="space-y-4">
                  <button
                    onClick={() => window.open(`https://wa.me/${restaurant.contact.whatsapp}?text=Hi! I'm interested in your restaurant services.`, '_blank')}
                    className="group w-full relative overflow-hidden bg-gradient-to-r from-green-500 to-emerald-600 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-300 hover:shadow-xl hover:scale-105"
                  >
                    <div className="absolute inset-0 bg-white/20 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700 skew-x-12"></div>
                    <div className="relative flex items-center justify-center gap-3">
                      <MessageCircle className="w-5 h-5" />
                      <span>Chat on WhatsApp</span>
                    </div>
                  </button>
                  
                  <button
                    onClick={() => window.open(`https://maps.google.com/?q=${restaurant.name}, ${restaurant.location}`, '_blank')}
                    className="group w-full relative overflow-hidden bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-300 hover:shadow-xl hover:scale-105"
                  >
                    <div className="absolute inset-0 bg-white/20 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700 skew-x-12"></div>
                    <div className="relative flex items-center justify-center gap-3">
                      <Navigation className="w-5 h-5" />
                      <span>Get Directions</span>
                    </div>
                  </button>
                  
                  <button
                    onClick={() => setShowBookingForm(true)}
                    className="group w-full relative overflow-hidden bg-gradient-to-r from-purple-500 to-pink-600 text-white py-4 px-6 rounded-xl font-semibold transition-all duration-300 hover:shadow-xl hover:scale-105"
                  >
                    <div className="absolute inset-0 bg-white/20 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-700 skew-x-12"></div>
                    <div className="relative flex items-center justify-center gap-3">
                      <Calendar className="w-5 h-5" />
                      <span>Book Now</span>
                    </div>
                  </button>
                </div>
              </div>

              <div className="bg-gradient-to-br from-emerald-50 to-teal-50 rounded-2xl p-6 border border-emerald-100">
                <h3 className="text-lg font-bold text-slate-900 mb-4">Pricing & Availability</h3>
                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <span className="text-slate-600">Price Range</span>
                    <span className="text-xl font-bold text-emerald-600">{restaurant.priceRange}</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-slate-600">Room Status</span>
                    <span className={`flex items-center gap-2 px-3 py-1 rounded-full text-sm font-semibold ${
                      restaurant.roomsAvailable 
                        ? 'bg-green-100 text-green-700' 
                        : 'bg-red-100 text-red-700'
                    }`}>
                      <Bed className="w-4 h-4" />
                      {restaurant.roomsAvailable ? 'Available' : 'Not Available'}
                    </span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-slate-600">Status</span>
                    <span className={`px-3 py-1 rounded-full text-sm font-semibold ${
                      restaurant.status === 'Active' 
                        ? 'bg-green-100 text-green-700' 
                        : 'bg-red-100 text-red-700'
                    }`}>
                      {restaurant.status}
                    </span>
                  </div>
                </div>
              </div>

              <div className="bg-gradient-to-br from-slate-50 to-blue-50 rounded-2xl p-6 border border-slate-200">
                <h3 className="text-lg font-bold text-slate-900 mb-3">Need Help?</h3>
                <p className="text-slate-600 text-sm mb-4">
                  Have questions about the menu, reservations, or special requests? Our friendly staff is here to help!
                </p>
                <div className="space-y-2">
                  <a 
                    href={`tel:${restaurant.contact.phone}`}
                    className="flex items-center gap-2 text-emerald-600 hover:text-emerald-700 font-medium transition-colors"
                  >
                    <Phone className="w-4 h-4" />
                    <span>{restaurant.contact.phone}</span>
                  </a>
                  <a 
                    href={`mailto:${restaurant.contact.email}`}
                    className="flex items-center gap-2 text-emerald-600 hover:text-emerald-700 font-medium transition-colors"
                  >
                    <Mail className="w-4 h-4" />
                    <span>{restaurant.contact.email}</span>
                  </a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      <BookingForm 
        isOpen={showBookingForm}
        onClose={() => setShowBookingForm(false)}
      />
    </div>
  );
};

export default RestaurantDetailPage;
// oldrestuantdetail page 



// oldprilfecode
import React, { useState } from "react";
import { AddEditForm } from "../components";
import { Mail, Phone, MapPin, Star, Calendar, Utensils, Package, ChevronRight } from 'lucide-react';
import { useAuth } from "../context/AuthContext";
import RestaurantCard from '../components/common/RestaurantCard';
const ProfilePage = () => {
    const { user } = useAuth();
   console.log("Profile page user =>", user);

  const [activeTab, setActiveTab] = useState('restaurants');
  const [showAddForm, setShowAddForm] = useState(false);
  const [editingItem, setEditingItem] = useState(null);

  const firstLetter = user?.username?.charAt(0).toUpperCase();
  console.log("fisrt letter of usernaem:", firstLetter)

  // Sample user data
  const userData = {
    name: "",
    email: "ahmad.khan@gbguide.com",
    phone: "",
    location: "Skardu, Baltistan",
    joinDate: "January 2024",
   userType: 'tourist',

   
    stats: {
      restaurants: 3,
      products: 12,
      reviews: 45,
      rating: 4.8
    },
   
  };

  // Sample restaurants data
  const [restaurants, setRestaurants] = useState([
    {
      id: 1,
      name: "Mountain View Restaurant",
      cuisine: "Local & Continental",
      location: "Skardu City Center",
      rating: 4.5,
      reviews: 128,
      image: "https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=400&h=300&fit=crop",
      status: "Active",
      revenue: "Rs. 45,000/month"
    },
    {
      id: 2,
      name: "Balti Kitchen",
      cuisine: "Traditional Balti",
      location: "Old Skardu Market",
      rating: 4.7,
      reviews: 89,
      image: "https://images.unsplash.com/photo-1551218808-94e220e084d2?w=400&h=300&fit=crop",
      status: "Active",
      revenue: "Rs. 32,000/month"
    },
    {
      id: 3,
      name: "Glacier Cafe",
      cuisine: "Cafe & Snacks",
      location: "Near Satpara Lake",
      rating: 4.3,
      reviews: 67,
      image: "https://images.unsplash.com/photo-1554118811-1e0d58224f24?w=400&h=300&fit=crop",
      status: "Pending Review",
      revenue: "Rs. 18,000/month"
    }
  ]);

  // Sample products data
  const [products, setProducts] = useState([
    {
      id: 1,
      name: "Premium Apricots",
      category: "Dry Fruits",
      price: "Rs. 1,200/kg",
      stock: 50,
      image: "https://images.unsplash.com/photo-1605032687614-0e0e21a22750?w=300&h=300&fit=crop",
      status: "In Stock",
      sales: 145
    },
    {
      id: 2,
      name: "Traditional Shawl",
      category: "Handicrafts",
      price: "Rs. 3,500",
      stock: 12,
      image: "https://images.unsplash.com/photo-1594736797933-d0401ba2fe65?w=300&h=300&fit=crop",
      status: "Low Stock",
      sales: 23
    },
    {
      id: 3,
      name: "Ruby Gemstone",
      category: "Gemstones",
      price: "Rs. 8,000",
      stock: 8,
      image: "https://images.unsplash.com/photo-1515562141207-7a88fb7ce338?w=300&h=300&fit=crop",
      status: "In Stock",
      sales: 12
    },
    {
      id: 4,
      name: "Walnuts Premium",
      category: "Dry Fruits",
      price: "Rs. 1,800/kg",
      stock: 0,
      image: "https://images.unsplash.com/photo-1608797178974-15b35a64ede6?w=300&h=300&fit=crop",
      status: "Out of Stock",
      sales: 89
    }
  ]);

  const handleDelete = (type, id) => {
    if (window.confirm(`Are you sure you want to delete this ${type}?`)) {
      if (type === 'restaurant') {
        setRestaurants(restaurants.filter(r => r.id !== id));
      } else {
        setProducts(products.filter(p => p.id !== id));
      }
    }
  };

  const handleEdit = (type, item) => {
    setEditingItem({ type, item });
    setShowAddForm(true);
  };

  const handleAdd = (type) => {
    setEditingItem({ type, item: null });
    setShowAddForm(true);
  };

  return (
    
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-emerald-50">
     
       {/* Hero Section */}
      <section className="relative h-96 bg-gradient-to-r from-emerald-800 to-teal-800 overflow-hidden">
        <div
          className="absolute inset-0 bg-cover bg-center opacity-30"
          style={{
            backgroundImage: "url('https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=600&fit=crop')"
          }}
        ></div>
        <div className="absolute inset-0 bg-black/20"></div>

        <div className="relative -mt-10 z-10 flex items-center justify-center h-full">
          <div className="text-center text-white px-4 max-w-4xl">
            <h1 className="text-6xl md:text-6xl font-bold mb-6">
              WELLCOME <span className="bg-gradient-to-r from-emerald-300 to-teal-300 bg-clip-text text-transparent">{user?.username.toUpperCase()}</span>
            </h1>
            <p className="text-xl md:text-xl text-gray-200 max-w-2xl mx-auto">
Manage your business, in one place.
            </p>
          </div>
        </div>
      </section>
      {/* profle card  */}
      
        <div className="relative -mt-36 z-20   px-4 sm:px-6 lg:px-8 ">
          <div className="bg-white/95 backdrop-blur-sm rounded-3xl shadow-2xl p-8 md:p-12 ">
          

            {/* Profile Content */}
            <div className="flex flex-col lg:flex-row items-center lg:items-start space-y-6 lg:space-y-0 lg:space-x-8 ">
              {/* Profile Picture */}
            <div className="relative flex-shrink-0">
  <div className="w-32 h-32 rounded-full flex items-center justify-center bg-emerald-500 ring-4 ring-emerald-500 ring-offset-4 ring-offset-white text-white font-bold text-5xl">
    {user?.username?.charAt(0)?.toUpperCase()}
  </div>
</div>


              {/* Profile Info */}
              <div className="flex-1 text-center lg:text-left">
                <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between mb-4">
                  <div>
                    <h2 className="text-3xl font-bold text-slate-900 mb-2">{user?.username}</h2>
                    <div className="flex items-center justify-center lg:justify-start space-x-2 mb-2">
                      <span className="bg-emerald-100 text-emerald-700 px-3 py-1 rounded-full text-sm font-semibold">
                        {user?.role}
                      </span>
                    
                    </div>
                  </div>
                  <button className="bg-gradient-to-r from-emerald-600 to-teal-600 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg hover:scale-105 transition-all duration-200">
                    Edit Profile
                  </button>
                </div>

                <p className="text-slate-700 mb-4 max-w-2xl">{userData.bio}</p>

                {/* Contact Info */}
                <div className="flex flex-col sm:flex-row sm:items-center space-y-2 sm:space-y-0 sm:space-x-6 text-slate-600 mb-6">
                  <div className="flex items-center justify-center lg:justify-start space-x-2">
                    <Mail className="h-4 w-4 text-emerald-600" />
                    <span>{user?.email}</span>
                  </div>
                  <div className="flex items-center justify-center lg:justify-start space-x-2">
                    <Phone className="h-4 w-4 text-emerald-600" />
                    <span>{user?.phone}</span>
                  </div>
                  <div className="flex items-center justify-center lg:justify-start space-x-2">
                    <MapPin className="h-4 w-4 text-emerald-600" />
                    <span>{userData.location}</span>
                  </div>
                </div>


       



                {/* Stats */}
                {user?.role === "business_owner" && ( 
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
                  <div className="bg-gradient-to-br from-emerald-50 to-teal-50 p-4 rounded-xl text-center border border-emerald-100">
                    <div className="text-2xl font-bold text-emerald-600">{userData.stats.restaurants}</div>
                    <div className="text-sm text-slate-600 font-medium">Restaurants</div>
                  </div>
                  <div className="bg-gradient-to-br from-blue-50 to-indigo-50 p-4 rounded-xl text-center border border-blue-100">
                    <div className="text-2xl font-bold text-blue-600">{userData.stats.products}</div>
                    <div className="text-sm text-slate-600 font-medium">Products</div>
                  </div>
                  <div className="bg-gradient-to-br from-purple-50 to-pink-50 p-4 rounded-xl text-center border border-purple-100">
                    <div className="text-2xl font-bold text-purple-600">{userData.stats.reviews}</div>
                    <div className="text-sm text-slate-600 font-medium">Reviews</div>
                  </div>
                
                </div>
                )}
              </div>
            </div>
          </div>
        </div>
      {/* Tabs Navigation */}


   {user?.role === "business_owner" && (
      <>
 
      <section className="bg-white/90 backdrop-blur-sm border-t shadow-sm sticky top-0 z-40">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex space-x-8">
            <button
              onClick={() => setActiveTab('restaurants')}
              className={`flex items-center space-x-2 py-4 px-2 border-b-2 font-semibold transition-all duration-200 ${
                activeTab === 'restaurants'
                  ? 'border-emerald-500 text-emerald-600'
                  : 'border-transparent text-slate-600 hover:text-emerald-600 hover:border-emerald-200'
              }`}
            >
              <Utensils className="h-5 w-5" />
              <span>My Restaurants ({restaurants.length})</span>
            </button>
            <button
              onClick={() => setActiveTab('products')}
              className={`flex items-center space-x-2 py-4 px-2 border-b-2 font-semibold transition-all duration-200 ${
                activeTab === 'products'
                  ? 'border-emerald-500 text-emerald-600'
                  : 'border-transparent text-slate-600 hover:text-emerald-600 hover:border-emerald-200'
              }`}
            >
              <Package className="h-5 w-5" />
              <span>My Products ({products.length})</span>
            </button>
          </div>
        </div>
      </section>

      <section className="py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          
          {/* Restaurants Tab */}
          {activeTab === 'restaurants' && (
            <div>
              <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8">
                <h2 className="text-3xl font-bold text-slate-900 mb-4 sm:mb-0">My Restaurants</h2>
                <button 
                  onClick={() => handleAdd('restaurant')}
                  className="bg-gradient-to-r from-emerald-600 to-teal-600 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg hover:scale-105 transition-all duration-200 flex items-center space-x-2"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
                  </svg>
                  <span>Add Restaurant</span>
                </button>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {restaurants.map((restaurant) => (
                  <div key={restaurant.id} className="bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl hover:scale-105 transition-all duration-300">
                    <div className="relative h-48">
                      <img 
                        src={restaurant.image} 
                        alt={restaurant.name}
                        className="w-full h-full object-cover"
                      />
                      <div className="absolute top-4 right-4">
                        <span className={`px-3 py-1 rounded-full text-xs font-semibold backdrop-blur-sm ${
                          restaurant.status === 'Active' 
                            ? 'bg-green-100/90 text-green-700'
                            : 'bg-yellow-100/90 text-yellow-700'
                        }`}>
                          {restaurant.status}
                        </span>
                      </div>
                    </div>
                    
                    <div className="p-6">
                      <h3 className="text-xl font-bold text-slate-900 mb-2">{restaurant.name}</h3>
                      <p className="text-slate-600 mb-2">{restaurant.cuisine}</p>
                      <div className="flex items-center text-slate-600 mb-3">
                        <MapPin className="h-4 w-4 mr-1 text-emerald-600" />
                        <span className="text-sm">{restaurant.location}</span>
                      </div>
                      
                      <div className="flex items-center justify-between mb-4">
                        <div className="flex items-center space-x-1">
                          <Star className="h-4 w-4 text-yellow-400 fill-current" />
                          <span className="font-semibold">{restaurant.rating}</span>
                          <span className="text-slate-500 text-sm">({restaurant.reviews})</span>
                        </div>
                        <div className="text-emerald-600 font-semibold text-sm">
                          {restaurant.revenue}
                        </div>
                      </div>

                      <div className="flex space-x-2">
                        <button 
                          onClick={() => handleEdit('restaurant', restaurant)}
                          className="flex-1 bg-emerald-600 text-white py-2 px-4 rounded-lg hover:bg-emerald-700 transition-colors text-sm font-semibold"
                        >
                          Edit
                        </button>
                        <button 
                          onClick={() => handleDelete('restaurant', restaurant.id)}
                          className="flex-1 bg-red-600 text-white py-2 px-4 rounded-lg hover:bg-red-700 transition-colors text-sm font-semibold"
                        >
                          Delete
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {restaurants.length === 0 && (
                <div className="text-center py-16">
                  <Utensils className="h-16 w-16 text-slate-300 mx-auto mb-4" />
                  <h3 className="text-xl font-semibold text-slate-600 mb-2">No restaurants yet</h3>
                  <p className="text-slate-500 mb-6">Start by adding your first restaurant</p>
                  <button 
                    onClick={() => handleAdd('restaurant')}
                    className="bg-gradient-to-r from-emerald-600 to-teal-600 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg hover:scale-105 transition-all duration-200"
                  >
                    Add Your First Restaurant
                  </button>
                </div>
              )}
            </div>
          )}

          {/* Products Tab */}
          {activeTab === 'products' && (
            <div>
              <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8">
                <h2 className="text-3xl font-bold text-slate-900 mb-4 sm:mb-0">My Products</h2>
                <button 
                  onClick={() => handleAdd('product')}
                  className="bg-gradient-to-r from-emerald-600 to-teal-600 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg hover:scale-105 transition-all duration-200 flex items-center space-x-2"
                >
                  <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 4v16m8-8H4" />
                  </svg>
                  <span>Add Product</span>
                </button>
              </div>

              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
                {products.map((product) => (
                  <div key={product.id} className="bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl hover:scale-105 transition-all duration-300">
                    <div className="relative h-48">
                      <img 
                        src={product.image} 
                        alt={product.name}
                        className="w-full h-full object-cover"
                      />
                      <div className="absolute top-4 right-4">
                        <span className={`px-2 py-1 rounded-full text-xs font-semibold backdrop-blur-sm ${
                          product.status === 'In Stock' 
                            ? 'bg-green-100/90 text-green-700'
                            : product.status === 'Low Stock'
                            ? 'bg-yellow-100/90 text-yellow-700'
                            : 'bg-red-100/90 text-red-700'
                        }`}>
                          {product.status}
                        </span>
                      </div>
                      <div className="absolute top-4 left-4">
                        <span className="bg-emerald-500/90 text-white px-2 py-1 rounded-full text-xs font-semibold backdrop-blur-sm">
                          {product.category}
                        </span>
                      </div>
                    </div>
                    
                    <div className="p-4">
                      <h3 className="text-lg font-bold text-slate-900 mb-2">{product.name}</h3>
                      <div className="flex items-center justify-between mb-3">
                        <span className="text-xl font-bold text-emerald-600">{product.price}</span>
                        <span className="text-sm text-slate-600">Stock: {product.stock}</span>
                      </div>
                      <div className="text-sm text-slate-600 mb-4">
                        Sales: {product.sales} units
                      </div>

                      <div className="flex space-x-2">
                        <button 
                          onClick={() => handleEdit('product', product)}
                          className="flex-1 bg-emerald-600 text-white py-2 px-3 rounded-lg hover:bg-emerald-700 transition-colors text-sm font-semibold"
                        >
                          Edit
                        </button>
                        <button 
                          onClick={() => handleDelete('product', product.id)}
                          className="flex-1 bg-red-600 text-white py-2 px-3 rounded-lg hover:bg-red-700 transition-colors text-sm font-semibold"
                        >
                          Delete
                        </button>
                      </div>
                    </div>
                  </div>
                ))}
              </div>

              {products.length === 0 && (
                <div className="text-center py-16">
                  <Package className="h-16 w-16 text-slate-300 mx-auto mb-4" />
                  <h3 className="text-xl font-semibold text-slate-600 mb-2">No products yet</h3>
                  <p className="text-slate-500 mb-6">Start by adding your first product</p>
                  <button 
                    onClick={() => handleAdd('product')}
                    className="bg-gradient-to-r from-emerald-600 to-teal-600 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg hover:scale-105 transition-all duration-200"
                  >
                    Add Your First Product
                  </button>
                </div>
              )}
            </div>
          )}
        </div>
      </section>

      {showAddForm && (
        <AddEditForm 
          editingItem={editingItem}
          setShowAddForm={setShowAddForm}
          restaurants={restaurants}
          setRestaurants={setRestaurants}
          products={products}
          setProducts={setProducts}
        />
      )}
      </>
      )}
    </div>
    
   
  
    )}

export default ProfilePage;
// oldprilfecode





























// =================oldone=============



import React, { useState } from 'react';
import { 
  MapPin, 
  Phone, 
  Mail, 
  Star, 
  Clock, 
  Wifi, 
  Car, 
  Users, 
  Calendar, 
  MessageCircle, 
  Navigation, 
  Bed,
  Edit,
  Trash2,
  ChevronLeft,
  ChevronRight,
  X,
  Send
} from 'lucide-react';

const RestaurantSection = () => {
  const [currentView, setCurrentView] = useState('list'); // 'list' or 'detail'
  const [selectedRestaurant, setSelectedRestaurant] = useState(null);
  const [showBookingForm, setShowBookingForm] = useState(false);
  const [showReviewForm, setShowReviewForm] = useState(false);
  const [isOwnerView, setIsOwnerView] = useState(false); // Toggle for demo purposes
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [reviewsPage, setReviewsPage] = useState(0);

  // Sample restaurant data
  const restaurants = [
    {
      id: 1,
      name: "Mountain View Restaurant",
      type: "Local & Continental",
      location: "Skardu City Center",
      status: "Active",
      roomsAvailable: true,
      rating: 4.5,
      reviewCount: 128,
      priceRange: "Rs. 800-1500",
      description: "Authentic Balti cuisine with stunning mountain views. Family-owned restaurant serving traditional dishes for over 20 years.",
      contact: {
        phone: "+92 300 1234567",
        email: "info@mountainview.com",
        whatsapp: "923001234567"
      },
      images: [
        "https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=800&h=600&fit=crop",
        "https://images.unsplash.com/photo-1551218808-94e220e084d2?w=800&h=600&fit=crop",
        "https://images.unsplash.com/photo-1554118811-1e0d58224f24?w=800&h=600&fit=crop"
      ],
      amenities: ["WiFi", "Parking", "AC", "Outdoor Seating"],
      openHours: "9:00 AM - 11:00 PM",
      speciality: "Traditional Balti Cuisine",
      established: "2003"
    },
    {
      id: 2,
      name: "Glacier BBQ Point",
      type: "BBQ & Grill",
      location: "Near Satpara Lake",
      status: "Active",
      roomsAvailable: false,
      rating: 4.7,
      reviewCount: 89,
      priceRange: "Rs. 1200-2000",
      description: "Premium BBQ experience with lakeside dining. Fresh grilled meats and seafood with panoramic lake views.",
      contact: {
        phone: "+92 301 9876543",
        email: "bookings@glacierbbq.com",
        whatsapp: "923019876543"
      },
      images: [
        "https://images.unsplash.com/photo-1544025162-d76694265947?w=800&h=600&fit=crop",
        "https://images.unsplash.com/photo-1551218808-94e220e084d2?w=800&h=600&fit=crop"
      ],
      amenities: ["Parking", "Lake View", "Outdoor Seating", "Live BBQ"],
      openHours: "11:00 AM - 12:00 AM",
      speciality: "Grilled Specialties",
      established: "2015"
    },
    {
      id: 3,
      name: "Heritage Balti Kitchen",
      type: "Traditional Local",
      location: "Old Skardu Market",
      status: "Not Active",
      roomsAvailable: true,
      rating: 4.3,
      reviewCount: 67,
      priceRange: "Rs. 500-1000",
      description: "Traditional Balti kitchen serving authentic local dishes passed down through generations.",
      contact: {
        phone: "+92 302 5555444",
        email: "contact@heritagekitchen.com",
        whatsapp: "923025555444"
      },
      images: [
        "https://images.unsplash.com/photo-1414235077428-338989a2e8c0?w=800&h=600&fit=crop"
      ],
      amenities: ["Traditional Setup", "Local Music", "Cultural Experience"],
      openHours: "8:00 AM - 10:00 PM",
      speciality: "Heritage Recipes",
      established: "1995"
    },
    {
      id: 4,
      name: "Alpine Café & Lodge",
      type: "Continental & Café",
      location: "Deosai Basecamp",
      status: "Active",
      roomsAvailable: true,
      rating: 4.8,
      reviewCount: 156,
      priceRange: "Rs. 600-1200",
      description: "Cozy café with lodge facilities. Perfect stop for trekkers and nature lovers exploring Deosai Plains.",
      contact: {
        phone: "+92 303 7777888",
        email: "stay@alpinecafe.com",
        whatsapp: "923037777888"
      },
      images: [
        "https://images.unsplash.com/photo-1554118811-1e0d58224f24?w=800&h=600&fit=crop",
        "https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=800&h=600&fit=crop"
      ],
      amenities: ["Lodge Rooms", "Trekking Guide", "WiFi", "Mountain View"],
      openHours: "6:00 AM - 11:00 PM",
      speciality: "Continental & Local Fusion",
      established: "2010"
    }
  ];

  // Sample reviews data
  const allReviews = [
    {
      id: 1,
      name: "Sarah Johnson",
      rating: 5,
      comment: "Amazing authentic Balti food! The mountain views are breathtaking. Staff was very friendly and helpful.",
      date: "2 weeks ago",
      avatar: "https://images.unsplash.com/photo-1494790108755-2616b612b5e5?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 2,
      name: "Ahmad Ali",
      rating: 4,
      comment: "Great local experience. Food was delicious and prices are reasonable. Recommended for families.",
      date: "1 month ago",
      avatar: "https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 3,
      name: "Maria Garcia",
      rating: 5,
      comment: "Best restaurant in Skardu! The traditional dishes are exceptional. Will definitely come back.",
      date: "1 month ago",
      avatar: "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 4,
      name: "David Chen",
      rating: 4,
      comment: "Beautiful location with great food. The service could be a bit faster but overall excellent experience.",
      date: "2 months ago",
      avatar: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=50&h=50&fit=crop&crop=face"
    },
    {
      id: 5,
      name: "Fatima Khan",
      rating: 5,
      comment: "Loved the authentic flavors and warm hospitality. Perfect place for tourists to experience local culture.",
      date: "2 months ago",
      avatar: "https://images.unsplash.com/photo-1489424731084-a5d8b219a5bb?w=50&h=50&fit=crop&crop=face"
    }
  ];

  // Restaurant Card Component
  const RestaurantCard = ({ restaurant, isDetailView = false, showActions = false }) => (
    <div className={`bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 ${!isDetailView ? 'hover:scale-105' : ''}`}>
      <div className="relative">
        <img 
          src={restaurant.images[0]} 
          alt={restaurant.name}
          className={`w-full object-cover ${isDetailView ? 'h-64' : 'h-48'}`}
        />
        <div className="absolute top-4 left-4 flex gap-2">
          <span className="bg-emerald-500/90 text-white px-3 py-1 rounded-full text-sm font-semibold backdrop-blur-sm">
            {restaurant.type}
          </span>
          <span className={`px-3 py-1 rounded-full text-sm font-semibold backdrop-blur-sm ${
            restaurant.status === 'Active' 
              ? 'bg-green-100/90 text-green-700' 
              : 'bg-red-100/90 text-red-700'
          }`}>
            {restaurant.status}
          </span>
        </div>
        <div className="absolute top-4 right-4">
          <span className={`flex items-center gap-1 px-3 py-1 rounded-full text-sm font-semibold backdrop-blur-sm ${
            restaurant.roomsAvailable 
              ? 'bg-blue-100/90 text-blue-700' 
              : 'bg-gray-100/90 text-gray-700'
          }`}>
            <Bed className="w-4 h-4" />
            {restaurant.roomsAvailable ? 'Rooms Available' : 'No Rooms'}
          </span>
        </div>
        <div className="absolute bottom-4 left-4">
          <div className="flex items-center gap-1 bg-white/90 px-2 py-1 rounded-full backdrop-blur-sm">
            <Star className="w-4 h-4 text-yellow-400 fill-current" />
            <span className="text-sm font-semibold">{restaurant.rating}</span>
            <span className="text-xs text-gray-600">({restaurant.reviewCount})</span>
          </div>
        </div>
      </div>
      
      <div className="p-6">
        <div className="flex items-start justify-between mb-3">
          <div>
            <h3 className="text-xl font-bold text-slate-900 mb-1">{restaurant.name}</h3>
            <div className="flex items-center text-slate-600 mb-2">
              <MapPin className="w-4 h-4 mr-1 text-emerald-600" />
              <span className="text-sm">{restaurant.location}</span>
            </div>
          </div>
          <div className="text-right">
            <div className="text-emerald-600 font-semibold">{restaurant.priceRange}</div>
            <div className="text-xs text-slate-500">per person</div>
          </div>
        </div>

        {isDetailView && (
          <div className="mb-4">
            <p className="text-slate-600 text-sm leading-relaxed">{restaurant.description}</p>
            <div className="mt-3 flex flex-wrap gap-2">
              {restaurant.amenities.map((amenity, index) => (
                <span key={index} className="bg-slate-100 text-slate-700 px-2 py-1 rounded-full text-xs">
                  {amenity}
                </span>
              ))}
            </div>
          </div>
        )}

        <div className="flex gap-2">
          {!isDetailView && (
            <button 
              onClick={() => {
                setSelectedRestaurant(restaurant);
                setCurrentView('detail');
              }}
              className="flex-1 bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-2 px-4 rounded-lg hover:shadow-lg transition-all duration-200 text-sm font-semibold"
            >
              View Details
            </button>
          )}
          
          {showActions && isOwnerView && (
            <>
              <button className="flex items-center gap-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors text-sm font-semibold">
                <Edit className="w-4 h-4" />
                Edit
              </button>
              <button className="flex items-center gap-1 bg-red-600 text-white py-2 px-4 rounded-lg hover:bg-red-700 transition-colors text-sm font-semibold">
                <Trash2 className="w-4 h-4" />
                Delete
              </button>
            </>
          )}
        </div>
      </div>
    </div>
  );

  // Booking Form Component
  const BookingForm = () => {
    const [formData, setFormData] = useState({
      name: '',
      contact: '',
      email: '',
      guests: 1,
      checkIn: '',
      checkOut: '',
      specialRequest: ''
    });

    const handleSubmit = (e) => {
      e.preventDefault();
      alert('Booking request submitted! We will contact you soon.');
      setShowBookingForm(false);
      setFormData({
        name: '', contact: '', email: '', guests: 1, 
        checkIn: '', checkOut: '', specialRequest: ''
      });
    };

    return (
      <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50">
        <div className="bg-white rounded-2xl max-w-md w-full max-h-[90vh] overflow-y-auto">
          <div className="p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-2xl font-bold text-slate-900">Book Your Table</h3>
              <button 
                onClick={() => setShowBookingForm(false)}
                className="text-slate-400 hover:text-slate-600"
              >
                <X className="w-6 h-6" />
              </button>
            </div>

            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">Name *</label>
                <input
                  type="text"
                  required
                  value={formData.name}
                  onChange={(e) => setFormData({...formData, name: e.target.value})}
                  className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                  placeholder="Your full name"
                />
              </div>

              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">Phone *</label>
                <input
                  type="tel"
                  required
                  value={formData.contact}
                  onChange={(e) => setFormData({...formData, contact: e.target.value})}
                  className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                  placeholder="+92 300 1234567"
                />
              </div>

              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">Email</label>
                <input
                  type="email"
                  value={formData.email}
                  onChange={(e) => setFormData({...formData, email: e.target.value})}
                  className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                  placeholder="your@email.com"
                />
              </div>

              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">Number of Guests *</label>
                <select
                  value={formData.guests}
                  onChange={(e) => setFormData({...formData, guests: e.target.value})}
                  className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                >
                  {[1,2,3,4,5,6,7,8,9,10].map(num => (
                    <option key={num} value={num}>{num} Guest{num > 1 ? 's' : ''}</option>
                  ))}
                </select>
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-semibold text-slate-700 mb-2">Check-in Date</label>
                  <input
                    type="date"
                    value={formData.checkIn}
                    onChange={(e) => setFormData({...formData, checkIn: e.target.value})}
                    className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                  />
                </div>
                <div>
                  <label className="block text-sm font-semibold text-slate-700 mb-2">Check-out Date</label>
                  <input
                    type="date"
                    value={formData.checkOut}
                    onChange={(e) => setFormData({...formData, checkOut: e.target.value})}
                    className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-semibold text-slate-700 mb-2">Special Requests</label>
                <textarea
                  value={formData.specialRequest}
                  onChange={(e) => setFormData({...formData, specialRequest: e.target.value})}
                  rows="3"
                  className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent resize-none"
                  placeholder="Any special dietary requirements or requests..."
                ></textarea>
              </div>

              <button
                type="submit"
                className="w-full bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-3 px-6 rounded-lg font-semibold hover:shadow-lg transition-all duration-200"
              >
                Submit Booking Request
              </button>
            </form>
          </div>
        </div>
      </div>
    );
  };

  // Review Form Component
  const ReviewForm = () => {
    const [reviewData, setReviewData] = useState({
      rating: 5,
      comment: ''
    });

    const handleSubmit = (e) => {
      e.preventDefault();
      alert('Review submitted! Thank you for your feedback.');
      setShowReviewForm(false);
      setReviewData({ rating: 5, comment: '' });
    };

    return (
      <div className="bg-white rounded-xl p-6 border border-slate-200">
        <h4 className="text-lg font-semibold text-slate-900 mb-4">Write a Review</h4>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <label className="block text-sm font-semibold text-slate-700 mb-2">Rating</label>
            <div className="flex gap-1">
              {[1,2,3,4,5].map(star => (
                <button
                  key={star}
                  type="button"
                  onClick={() => setReviewData({...reviewData, rating: star})}
                  className={`text-2xl ${star <= reviewData.rating ? 'text-yellow-400' : 'text-gray-300'}`}
                >
                  ★
                </button>
              ))}
            </div>
          </div>
          <div>
            <label className="block text-sm font-semibold text-slate-700 mb-2">Your Review</label>
            <textarea
              required
              value={reviewData.comment}
              onChange={(e) => setReviewData({...reviewData, comment: e.target.value})}
              rows="4"
              className="w-full px-4 py-3 rounded-lg border border-slate-200 focus:ring-2 focus:ring-emerald-500 focus:border-transparent resize-none"
              placeholder="Share your experience..."
            ></textarea>
          </div>
          <div className="flex gap-3">
            <button
              type="submit"
              className="bg-emerald-600 text-white px-6 py-2 rounded-lg hover:bg-emerald-700 transition-colors font-semibold"
            >
              Submit Review
            </button>
            <button
              type="button"
              onClick={() => setShowReviewForm(false)}
              className="bg-slate-200 text-slate-700 px-6 py-2 rounded-lg hover:bg-slate-300 transition-colors font-semibold"
            >
              Cancel
            </button>
          </div>
        </form>
      </div>
    );
  };

  const currentReviews = allReviews.slice(reviewsPage * 5, (reviewsPage * 5) + 5);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-emerald-50">
      {/* Hero Section */}
      <section className="relative min-h-[50vh] flex items-center justify-center py-20">
        <div
          className="absolute inset-0 bg-cover bg-center"
          style={{
            backgroundImage: "url('https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=1920&h=800&fit=crop')",
          }}
        >
          <div className="absolute inset-0 bg-gradient-to-br from-teal-900/70 via-emerald-800/60 to-slate-900/80"></div>
        </div>

        <div className="relative z-10 text-center text-white px-4">
          <h1 className="text-4xl md:text-6xl font-bold mb-4">
            Restaurants in <span className="text-emerald-300">Gilgit Baltistan</span>
          </h1>
          <p className="text-lg md:text-xl max-w-3xl mx-auto opacity-90">
            Discover authentic flavors and dining experiences from traditional Balti cuisine to modern continental dishes, 
            all set against the breathtaking backdrop of the world's most beautiful mountains.
          </p>
          
          {/* Demo Toggle */}
          <div className="mt-8 flex items-center justify-center gap-4">
            <label className="flex items-center gap-2 bg-white/20 backdrop-blur-sm px-4 py-2 rounded-full">
              <input
                type="checkbox"
                checked={isOwnerView}
                onChange={(e) => setIsOwnerView(e.target.checked)}
                className="rounded"
              />
              <span className="text-sm">Owner View (Demo)</span>
            </label>
          </div>
        </div>
      </section>

      {/* Navigation */}
      {currentView === 'detail' && (
        <div className="bg-white/90 backdrop-blur-sm border-b px-4 py-3">
          <div className="max-w-7xl mx-auto">
            <button
              onClick={() => setCurrentView('list')}
              className="flex items-center gap-2 text-emerald-600 hover:text-emerald-700 font-semibold"
            >
              <ChevronLeft className="w-5 h-5" />
              Back to Restaurants
            </button>
          </div>
        </div>
      )}

      {/* Restaurant List View */}
      {currentView === 'list' && (
        <section className="py-12">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex items-center justify-between mb-8">
              <h2 className="text-3xl font-bold text-slate-900">Featured Restaurants</h2>
              <div className="text-slate-600">
                {restaurants.length} restaurants found
              </div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {restaurants.map((restaurant) => (
                <RestaurantCard 
                  key={restaurant.id} 
                  restaurant={restaurant}
                  showActions={isOwnerView}
                />
              ))}
            </div>
          </div>
        </section>
      )}

      {/* Restaurant Detail View */}
      {currentView === 'detail' && selectedRestaurant && (
        <section className="py-12">
          <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
            {/* Image Carousel */}
            <div className="relative mb-8 rounded-2xl overflow-hidden">
              <img 
                src={selectedRestaurant.images[currentImageIndex]} 
                alt={selectedRestaurant.name}
                className="w-full h-96 object-cover"
              />
              {selectedRestaurant.images.length > 1 && (
                <>
                  <button
                    onClick={() => setCurrentImageIndex(
                      currentImageIndex === 0 ? selectedRestaurant.images.length - 1 : currentImageIndex - 1
                    )}
                    className="absolute left-4 top-1/2 -translate-y-1/2 bg-white/80 backdrop-blur-sm p-2 rounded-full hover:bg-white transition-colors"
                  >
                    <ChevronLeft className="w-6 h-6" />
                  </button>
                  <button
                    onClick={() => setCurrentImageIndex(
                      currentImageIndex === selectedRestaurant.images.length - 1 ? 0 : currentImageIndex + 1
                    )}
                    className="absolute right-4 top-1/2 -translate-y-1/2 bg-white/80 backdrop-blur-sm p-2 rounded-full hover:bg-white transition-colors"
                  >
                    <ChevronRight className="w-6 h-6" />
                  </button>
                  <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2">
                    {selectedRestaurant.images.map((_, index) => (
                      <button
                        key={index}
                        onClick={() => setCurrentImageIndex(index)}
                        className={`w-3 h-3 rounded-full transition-colors ${
                          index === currentImageIndex ? 'bg-white' : 'bg-white/50'
                        }`}
                      />
                    ))}
                  </div>
                </>
              )}
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
              {/* Main Info */}
              <div className="lg:col-span-2">
                <RestaurantCard restaurant={selectedRestaurant} isDetailView={true} />
                
                {/* Contact & Hours */}
                <div className="bg-white rounded-2xl shadow-lg p-6 mt-6">
                  <h3 className="text-xl font-bold text-slate-900 mb-4">Contact & Hours</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h4 className="font-semibold text-slate-700 mb-3">Contact Information</h4>
                      <div className="space-y-2">
                        <div className="flex items-center gap-2">
                          <Phone className="w-4 h-4 text-emerald-600" />
                          <span>{selectedRestaurant.contact.phone}</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <Mail className="w-4 h-4 text-emerald-600" />
                          <span>{selectedRestaurant.contact.email}</span>
                        </div>
                        <div className="flex items-center gap-2">
                          <MapPin className="w-4 h-4 text-emerald-600" />
                          <span>{selectedRestaurant.location}</span>
                        </div>
                      </div>
                    </div>
                    <div>
                      <h4 className="font-semibold text-slate-700 mb-3">Restaurant Info</h4>
                      <div className="space-y-2 text-sm">
                        <div className="flex items-center gap-2">
                          <Clock className="w-4 h-4 text-emerald-600" />
                          <span>{selectedRestaurant.openHours}</span>
                        </div>
                        <div><strong>Speciality:</strong> {selectedRestaurant.speciality}</div>
                        <div><strong>Established:</strong> {selectedRestaurant.established}</div>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Reviews */}
                <div className="bg-white rounded-2xl shadow-lg p-6 mt-6">
                  <div className="flex items-center justify-between mb-6">
                    <h3 className="text-xl font-bold text-slate-900">Customer Reviews</h3>
                    <button
                      onClick={() => setShowReviewForm(!showReviewForm)}
                      className="bg-emerald-600 text-white px-4 py-2 rounded-lg hover:bg-emerald-700 transition-colors font-semibold text-sm"
                    >
                      Write Review
                    </button>
                  </div>

                  {showReviewForm && <ReviewForm />}

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mt-6">
                    {currentReviews.map((review) => (
                      <div key={review.id} className="bg-slate-50 rounded-xl p-4">
                        <div className="flex items-start gap-3">
                          <img 
                            src={review.avatar} 
                            alt={review.name}
                            className="w-12 h-12 rounded-full object-cover"
                          />
                          <div className="flex-1">
                            <div className="flex items-center gap-2 mb-1">
                              <h5 className="font-semibold text-slate-900">{review.name}</h5>
                              <div className="flex">
                                {[...Array(5)].map((_, i) => (
                                  <Star 
                                    key={i} 
                                    className={`w-4 h-4 ${i < review.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'}`} 
                                  />
                                ))}
                              </div>
                            </div>
                            <p className="text-slate-600 text-sm mb-2">{review.comment}</p>
                            <span className="text-xs text-slate-500">{review.date}</span>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>

                  {allReviews.length > 5 && (
                    <div className="flex items-center justify-center gap-4 mt-6">
                      <button
                        onClick={() => setReviewsPage(Math.max(0, reviewsPage - 1))}
                        disabled={reviewsPage === 0}
                        className="flex items-center gap-1 bg-slate-200 text-slate-700 px-4 py-2 rounded-lg hover:bg-slate-300 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                      >
                        <ChevronLeft className="w-4 h-4" />
                        Previous
                      </button>
                      <span className="text-slate-600">
                        Page {reviewsPage + 1} of {Math.ceil(allReviews.length / 5)}
                      </span>
                      <button
                        onClick={() => setReviewsPage(Math.min(Math.ceil(allReviews.length / 5) - 1, reviewsPage + 1))}
                        disabled={reviewsPage >= Math.ceil(allReviews.length / 5) - 1}
                        className="flex items-center gap-1 bg-slate-200 text-slate-700 px-4 py-2 rounded-lg hover:bg-slate-300 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                      >
                        Next
                        <ChevronRight className="w-4 h-4" />
                      </button>
                    </div>
                  )}
                </div>
              </div>

              {/* Action Sidebar */}
              <div className="space-y-6">
                {/* Quick Actions */}
                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <h3 className="text-xl font-bold text-slate-900 mb-4">Quick Actions</h3>
                  <div className="space-y-3">
                    <button
                      onClick={() => window.open(`https://wa.me/${selectedRestaurant.contact.whatsapp}?text=Hi! I'm interested in your restaurant services.`, '_blank')}
                      className="w-full bg-gradient-to-r from-green-500 to-green-600 text-white py-3 px-4 rounded-lg hover:shadow-lg transition-all duration-200 flex items-center justify-center gap-2 font-semibold"
                    >
                      <MessageCircle className="w-5 h-5" />
                      Let's Talk on WhatsApp
                    </button>
                    
                    <button
                      onClick={() => window.open(`https://maps.google.com/?q=${selectedRestaurant.name}, ${selectedRestaurant.location}`, '_blank')}
                      className="w-full bg-gradient-to-r from-blue-500 to-blue-600 text-white py-3 px-4 rounded-lg hover:shadow-lg transition-all duration-200 flex items-center justify-center gap-2 font-semibold"
                    >
                      <Navigation className="w-5 h-5" />
                      Get Directions
                    </button>
                    
                    <button
                      onClick={() => setShowBookingForm(true)}
                      className="w-full bg-gradient-to-r from-emerald-600 to-teal-600 text-white py-3 px-4 rounded-lg hover:shadow-lg transition-all duration-200 flex items-center justify-center gap-2 font-semibold"
                    >
                      <Calendar className="w-5 h-5" />
                      Book Now
                    </button>
                  </div>
                </div>

                {/* Restaurant Stats */}
                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <h3 className="text-lg font-bold text-slate-900 mb-4">Restaurant Stats</h3>
                  <div className="space-y-4">
                    <div className="flex items-center justify-between">
                      <span className="text-slate-600">Overall Rating</span>
                      <div className="flex items-center gap-1">
                        <Star className="w-4 h-4 text-yellow-400 fill-current" />
                        <span className="font-semibold">{selectedRestaurant.rating}</span>
                      </div>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-slate-600">Total Reviews</span>
                      <span className="font-semibold">{selectedRestaurant.reviewCount}</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-slate-600">Price Range</span>
                      <span className="font-semibold text-emerald-600">{selectedRestaurant.priceRange}</span>
                    </div>
                    <div className="flex items-center justify-between">
                      <span className="text-slate-600">Status</span>
                      <span className={`px-2 py-1 rounded-full text-xs font-semibold ${
                        selectedRestaurant.status === 'Active' 
                          ? 'bg-green-100 text-green-700' 
                          : 'bg-red-100 text-red-700'
                      }`}>
                        {selectedRestaurant.status}
                      </span>
                    </div>
                  </div>
                </div>

                {/* Popular Amenities */}
                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <h3 className="text-lg font-bold text-slate-900 mb-4">Amenities</h3>
                  <div className="space-y-3">
                    {selectedRestaurant.amenities.map((amenity, index) => (
                      <div key={index} className="flex items-center gap-2">
                        {amenity === 'WiFi' && <Wifi className="w-4 h-4 text-blue-500" />}
                        {amenity === 'Parking' && <Car className="w-4 h-4 text-green-500" />}
                        {amenity === 'AC' && <div className="w-4 h-4 bg-cyan-500 rounded-full" />}
                        {(amenity === 'Outdoor Seating' || amenity === 'Lake View' || amenity === 'Mountain View') && <div className="w-4 h-4 bg-emerald-500 rounded-full" />}
                        {(amenity === 'Lodge Rooms' || amenity === 'Rooms Available') && <Bed className="w-4 h-4 text-purple-500" />}
                        {!['WiFi', 'Parking', 'AC', 'Outdoor Seating', 'Lake View', 'Mountain View', 'Lodge Rooms', 'Rooms Available'].includes(amenity) && <div className="w-4 h-4 bg-orange-500 rounded-full" />}
                        <span className="text-slate-700 text-sm">{amenity}</span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Contact Card */}
                <div className="bg-gradient-to-br from-emerald-50 to-teal-50 rounded-2xl p-6 border border-emerald-100">
                  <h3 className="text-lg font-bold text-slate-900 mb-4">Need Help?</h3>
                  <p className="text-slate-600 text-sm mb-4">
                    Have questions about the menu, reservations, or special requests? Our friendly staff is here to help!
                  </p>
                  <div className="space-y-2 text-sm">
                    <div className="flex items-center gap-2">
                      <Phone className="w-4 h-4 text-emerald-600" />
                      <a href={`tel:${selectedRestaurant.contact.phone}`} className="text-emerald-600 hover:text-emerald-700 font-medium">
                        {selectedRestaurant.contact.phone}
                      </a>
                    </div>
                    <div className="flex items-center gap-2">
                      <Mail className="w-4 h-4 text-emerald-600" />
                      <a href={`mailto:${selectedRestaurant.contact.email}`} className="text-emerald-600 hover:text-emerald-700 font-medium">
                        {selectedRestaurant.contact.email}
                      </a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Booking Form Modal */}
      {showBookingForm && <BookingForm />}
    </div>
  );
};

export default RestaurantSection;